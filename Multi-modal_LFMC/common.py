"""Common parameters and constants."""
import os


#################################################
### Directories
#################################################

# Top-level directory for all LFMC data
LFMC_DATA_DIR = r'G:\My Drive\LFMC Data'

# Temporary directory
TEMP_DIR = r'C:\Temp\LFMC'

# Directory for all data related to a set of models/experiments
DATA_DIR = os.path.join(LFMC_DATA_DIR, 'multi_modal_LFMC')

# Directory for GEE data used for generating LFMC maps
GEE_MAPS_DIR = os.path.join(LFMC_DATA_DIR, 'Maps data')

# Source_Dir should contain source data not extracted from GEE:
# - The Globe-LFMC database
# - The Climate Zone data and legend files
SOURCE_DIR = os.path.join(LFMC_DATA_DIR, 'Source data')

# DATA_DIR sub-directories
DATASETS_DIR = os.path.join(DATA_DIR, 'Datasets')   # Prepared input datasets
MODELS_DIR = os.path.join(DATA_DIR, 'Models')       # Model output and results
FIGURES_DIR = os.path.join(DATA_DIR, 'Figures')     # Figures generated by results analysis
MAPS_DIR = os.path.join(DATA_DIR, 'Maps data')      # Source data for maps


#################################################
### Files
#################################################

# Output file: sites extracted from the Globe-LFMC dataset
LFMC_SITES = os.path.join(DATASETS_DIR, 'LFMC_sites.csv')
# Output file: Globe-LFMC CONUS sample data augmented with auxiliary variables
LFMC_SAMPLES = os.path.join(DATASETS_DIR, 'LFMC_samples.csv')


#################################################
### Data Extraction Parameters
#################################################

# Extract dates
START_DATE = '2000-03-01'  # Samples from before this date are not extracted
END_DATE = '2019-01-01'    # Final day retrieved will be 2018-12-31

# Spatial projection and resolution (uses MODIS projection/resolution)
PROJ = 'SR-ORG:6974'
SCALE = 463.3127


#################################################
### Modelling Parameters
#################################################

ENSEMBLE_SIZE = 20
DERIVED_MODELS = {'merge10': {'type': 'merge', 'models': 10}}
ANALYSIS_MODEL = 'base'  # Either 'base' (for Multi-tempCNN) or one of the DERIVED_MODELS

# Modis-tempCNN uses the model formed by merging the last 10 checkpoints
MODIS_TEMPCNN_MODEL = 'merge10'   


#################################################
## Evaluation Parameters
#################################################

EVALUATION_RUNS = 50
ENSEMBLE_RUNS = 50
ENSEMBLE_SIZES = [1] + list(range(5, 30, 5))
ENSEMBLE_NAMES = ['Single model'] + [f'Ensemble {size}' for size in ENSEMBLE_SIZES[1:]]

CI = 0.95


#################################################
## Gdal Parameters
#################################################

GDAL_DATA = os.path.join(os.environ['CONDA_PREFIX'], 'Library', 'share', 'gdal')
GDAL_NODATA_VALUE = -999


#################################################
### Mapping Parameters
#################################################

MAP_PROJ = "EPSG:4326"
MAP_SCALE = 2000
MAP_BOUNDS = [-125, 24, -65, 50]
